@page "/optionvaluedata/{Id:int}"
@attribute [Authorize]
@using BlazorWithIdentity.Shared
@inject HttpClient Http
@using BlazorWithIdentity.Shared.DTO.Option
@using BlazorWithIdentity.Shared.DTO.OptionValue


<div class="row row-sm">
<div class="container">
    <FluentCard style="height:25%">
  
 <EditForm class="form-category" OnValidSubmit="OnSubmitOptionValue" Model="optionValueItem">
         
      <div class="col-md-8">
         
        

                </div>
                <div class="col-md-8">

                    <FluentTextField id="inputCategory"  @bind-Value="optionValueItem.OptionValueName"  placeholder="@optionValueItem.OptionValueName"  ></FluentTextField>
                    <ValidationMessage class="text-danger" For="@(() => optionValueItem.OptionValueName)" />


                </div>

                <div class="col-md-8">
                    <FluentButton type="submit" Appearance="Appearance.Accent">Submit</FluentButton>
                    <label class="text-danger">@error</label> 

                </div>



            </EditForm>
        </FluentCard>
    </div>

</div>






@code { [Parameter]
    public int Id { get; set; }
    string error { get; set; }


    OptionValueDTO optionValueItem { get; set; } = new OptionValueDTO();
    SaveOptionValueDTO saveOptionValuetDTO { get; set; } = new SaveOptionValueDTO();





    [Inject]
    public IOptionValueDataService OptionValueDataService { get; set; }
    [Inject]
    public IOptionDataService OptionDataService { get; set; }

    async Task OnSubmitOptionValue()
    {
        error = null;
        try
        {
            await OptionValueDataService.UpdateOptionValue(Id, optionValueItem);
            toastService.ShowToast($"{optionValueItem.OptionValueName} added Succesfuly", ToastLevel.Success);
            //  StateHasChanged();
            //    await OnInitializedAsync();
            navigationManager.NavigateTo("/optionvalue");



        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
    @functions {


       
       
      
      protected override async Task OnInitializedAsync()
    {
          
            optionValueItem = await OptionValueDataService.GetOptionValueById(Id);
            
          // dataList = await CategoryDataService.GetCategories();
            // toastService.ShowToast($"Items loaded succesfuly", ToastLevel.Info);
    }

      
    }
}
