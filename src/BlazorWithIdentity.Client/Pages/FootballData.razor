@page "/footballdata"
@layout LoginLayout

@attribute [Authorize]

@inject IdentityAuthenticationStateProvider authStateProvider

@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http
@using BlazorWithIdentity.Client.Services.Contracts
@using BlazorWithIdentity.Client.States

@using BlazorWithIdentity.Shared.DTO.Football

@using Microsoft.AspNetCore.Authorization
@if (data == null)
{
    <p>No data Available</p>
} else {
@foreach (var content in data.Response)
{
    <div class="row row-sm">
        <div class="container">
             <div class="row">
      <div class="entity-list ">
        <div class="entity-list-item "  >
          <div class="item-icon">
             <div class="item-icon">
                <img src="@content.Thumbnail"/>
            </div>
          </div>
          <div class="item-content-secondary">
            @content.Title
              <div class="content-text-tertiary "> <span class="label label-warning">@content.Competition</span>  </div>
              
          </div>

          <div class="item-content-primary">
              <div class="col-md-18">

                  <div class="content-text-primary "> </div>
            <div class="content-text-secondary"></div>
            
              </div>
              <div class="col-md-6">
                  <div class="content-text-tertiary ">
                   
              </div>
            
                   

               </div>

          </div>


        </div>
      </div>

    </div>
        </div>
    </div>
 


}}

@code {
     [Inject]
    public IFootballDataService FootballDataService { get; set; }

@functions {
        private FootballResultDTO<FootballDataDTO> data { get; set; }
        protected override async Task OnInitializedAsync()
        {
            data = await FootballDataService.GetFootballData();  

        }
}
}
