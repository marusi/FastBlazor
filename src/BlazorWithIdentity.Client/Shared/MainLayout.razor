@inherits LayoutComponentBase

@using BlazorWithIdentity.Client.Pages


    <AuthorizeView>
        <Authorized>
             
            <fluent-design-system-provider fill-color="#333" >
               
               
                  <fluent-toolbar   id="toolbar-fluent-components-main" style="width:100%; " >
                        <fluent-anchor Href="/" Appearance="Appearance.Outline">Home</fluent-anchor>
                           <fluent-switch onclick="document.darkTheme = !document.darkTheme; document.getElementsByTagName('fluent-design-system-provider')[0].setAttribute('background-color', darkTheme ? '#333333' : '#F7F7F7');">
                      <span style="padding-inline-end: 8px;"> Theme</span>
                      <span slot="checked-message">Dark</span>
                       <span slot="unchecked-message">Light</span>
                        </fluent-switch>
                          <FluentListbox slot="end">
                          <FluentOption   Value="Value content loses">
                                Hi, @context.User.Identity.Name
                          </FluentOption>
                          
                         <FluentOption @onclick="@LogoutClick" Value="log">
                              <span class="glyph glyph-back" data-toggle="tooltip" title="Log out"   slot="end"></span> 
                             Log Out
                         </FluentOption>
    
                    </FluentListbox>
    
                      </fluent-toolbar>
             </fluent-design-system-provider>
     
  
 <Toast></Toast>
   
 <div class="main">
  <FluentDesignSystemProvider role="navigation" class="navigation" FillColor="#E5E5E5">
       <NavMenu/>
      </FluentDesignSystemProvider>
   <div class="content">
        @Body
  </div>
</div>



           
      
 




        </Authorized>
        <NotAuthorized>
            @*Just render the body so that RedirectToLogin works*@
            @Body
        </NotAuthorized>
    </AuthorizeView>



@code {
     protected override async Task OnInitializedAsync()
    {
        ViewOption.OnChanged = () =>
        {
          StateHasChanged();//Refresh
        };
    }
    async Task LogoutClick()
    {
        await authStateProvider.Logout();
        toastService.ShowToast("Logged out!", ToastLevel.Info);
        navigationManager.NavigateTo("/login");
    }
}






